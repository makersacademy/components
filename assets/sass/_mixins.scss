/* --- structure --- */

@mixin vertical-holder {
  display: table;
}

@mixin vertical-element($align) {
  display: table-cell;
  vertical-align: $align;
}

/* Typography */

@mixin default-header-font-styling {
	font-family: $font-stack-1;
	text-transform: lowercase;
	font-variant: small-caps;
	letter-spacing: 0.15em;
  font-weight: 500;
  line-height: 0.8;
}

@mixin default-body-font-styling {
	font-family: $font-stack-1;
	line-height: 1.5;
  font-weight: 400;
}

@mixin default-cta-font-styling {
  font-family: $font-stack-1;
  line-height: 1.5;
  font-weight: 500;
  text-shadow: 0px 0px 3px rgba($color-5, 0.1);
}

/* Iconography, using Linea */

@mixin icon {
  font-family: "linea-arrows-10" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin icon-arrow-left {
  content: "\e03f";
}

@mixin icon-arrow-right {
  content: "\e04b";
}

/* Animations */

@mixin transition($transition) {
	-webkit-transition: $transition;
	transition: $transition;
}

/* Sitewide element Styles */
@mixin default-border($radius) {
	border-width: $default-border-width;
	border-style: $default-border-style;
	border-radius: $radius;
}

/* Overrides */
@mixin border-box {
  box-sizing: border-box;
}

@mixin content-box {
  box-sizing: content-box;
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* accessible visually hidden from
http://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
@mixin visually-hidden {
  position: absolute !important;
  height: 1px; width: 1px; 
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
}

/* Media Query abstractions */

@mixin respond-to($media) {
  @if $media == mobile {
    @media only screen and (max-width: $mobile) { @content; }
  }
  @else if $media == regular {
    @media only screen and (min-width: $mobile + 1) and (max-width: $massive - 1) { @content; }
  }
  @else if $media == massive {
    @media only screen and (min-width: $massive) { @content; }
  }
  @else if $media == shallow-screen {
    @media only screen and (max-height: $shallow-screen) { @content; }
  }
}


/* Development */

@mixin show-outline {
	outline: 1px dotted #777;
}